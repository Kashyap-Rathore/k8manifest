apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-mongo-app
  namespace: test-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-mongo-app-label
  template:
    metadata:
      name: spring-mongo-app-pod
      labels: 
        app: spring-mongo-app-label
    spec:
      containers:
        - name: spring-mongo-app-container
          image: dockerhandson/spring-boot-mongo
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
            limits:
              cpu: "150m"
              memory: "150Mi"
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom: 
                configMapKeyRef:
                  name: spring-boot-configmap
                  key: mongousername
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: spring-boot-configmap
                  key: mongopassword

---

apiVersion: v1
kind: Service
metadata:
  name: spring-app-svc
  namespace: test-namespace
spec:
  type: NodePort
  selector:
    app: spring-mongo-app-label
  ports:
    - port: 8080
      targetPort: 8080
      
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  namespace: test-namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
      
---

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongo-rs
  namespace: test-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-label
  template:
    metadata:
      name: mongo-pod
      labels:
        app: mongo-label
    spec:
      containers:
        - name: mongo-container
          image: mongo
          ports:
            - containerPort: 27017
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
            limits:
              cpu: "150m"
              memory: "150Mi"
          volumeMounts:
            - name: mongo-persistent-vol
              mountPath: /data/db    
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom: 
                configMapKeyRef:
                  name: spring-boot-configmap
                  key: mongousername
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: spring-boot-configmap
                  key: mongopassword
      volumes:
        - name: mongo-persistent-vol
          persistentVolumeClaim:
            claimName: mongo-pvc
               
---

apiVersion: v1
kind: Service
metadata:
  name: mongo-svc
  namespace: test-namespace
spec:
  type: ClusterIP
  selector:
    app: mongo-label
  ports:
    - port: 27017
      targetPort: 27017
      
      
